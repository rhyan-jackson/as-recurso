<div class="homepage">
  <header class="user-header">
    <h1>eBUGA</h1>
    <h2>Ol√° <%= @customer.username %>!</h2>
    <div class="balance-info">
      <p><strong>Saldo: </strong><span class="balance"><%= @customer.balance %>‚Ç¨</span></p>
    </div>
  </header>

  <!-- After the active ride section, add this: -->
  <% if @customer.reservations.pending.any? %>
    <div class="active-reservation-section">
      <% upcoming_reservation = @customer.reservations.pending.order(:start_time).first %>
      <h3>üìÖ Pr√≥xima Reserva</h3>
    
      <div class="reservation-details">
        <div class="reservation-info">
          <p><strong>Esta√ß√£o:</strong> <%= upcoming_reservation.start_time.strftime("Hoje √†s %H:%M") %></p>
          <p><strong>Recolha:</strong> <%= upcoming_reservation.start_time.strftime("%H:%M") %></p>
          <p><strong>Janela:</strong> at√© <%= upcoming_reservation.end_time.strftime("%H:%M") %></p>
        </div>
      
        <div class="reservation-countdown">
          <div class="countdown" data-target-time="<%= upcoming_reservation.start_time.iso8601 %>">
            <strong>Tempo restante:</strong> <span id="reservation-countdown">--:--</span>
          </div>
        </div>
      </div>
    
      <div class="reservation-actions">
        <%= link_to "üìç Ver Esta√ß√£o no Mapa", stations_path, class: "btn btn-primary" %>
        <%= link_to "‚ùå Cancelar Reserva", cancel_reservation_path(upcoming_reservation), 
            method: :patch, class: "btn btn-outline",
            confirm: "Tem a certeza? O valor ser√° reembolsado." %>
      </div>
    </div>
  <% end %>

  <% if @customer.has_active_ride? %>
    <div class="active-ride-section">
      <% active_ride = @customer.active_ride %>
      <h3>üö¥‚Äç‚ôÄÔ∏è Viagem Ativa</h3>
      
      <div class="ride-details">
        <div class="ride-info">
          <p><strong>Bicicleta:</strong> <%= active_ride.bike.brand %> #<%= active_ride.bike.id %></p>
          <p><strong>Origem:</strong> <%= active_ride.origin_station.name %></p>
          <p><strong>Destino:</strong> <%= active_ride.expected_destination_station.name %></p>
          <p><strong>In√≠cio:</strong> <%= active_ride.start_time.strftime("%H:%M") %></p>
        </div>
        
        <div class="live-stats">
          <div class="timer" data-start-time="<%= active_ride.start_time.iso8601 %>">
            <strong>Dura√ß√£o:</strong> <span id="ride-duration">--:--</span>
          </div>
          <div class="cost">
            <strong>Custo at√© agora:</strong> <span id="current-cost"><%= active_ride.price %>‚Ç¨</span>
          </div>
        </div>
      </div>
      
      <div class="ride-actions">
        <%= link_to "üèÅ Terminar Viagem", stations_path(mode: 'end_ride'), 
            class: "btn btn-success btn-large" %>
      </div>
    </div>
  <% else %>
    <div class="no-active-ride">
      <h3>üó∫Ô∏è Pronto para uma nova aventura?</h3>
      <p>Encontre uma esta√ß√£o e comece a sua viagem!</p>
    </div>
  <% end %>

  <nav class="main-actions">
    <div class="primary-actions">
      <%= link_to "üó∫Ô∏è Ver Mapa de Esta√ß√µes", stations_path, class: "btn btn-primary btn-large" %>
    </div>
    
    <div class="secondary-actions">
      <%= link_to "üí∞ Carregar Saldo", new_payment_path(@customer), class: "btn btn-secondary" %>
      <%= link_to "üìÑ Ver Pagamentos", payments_path, class: "btn btn-secondary" %>
    </div>
  </nav>

  <footer class="user-actions">
    <%= button_to "üö™ Sair", session_path, method: :delete, class: 'btn btn-outline' %>
  </footer>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Live timer for active ride
  const timer = document.querySelector('[data-start-time]');
  if (!timer) return;
  
  const startTime = new Date(timer.dataset.startTime);
  
  function updateTimer() {
    const now = new Date();
    const duration = Math.floor((now - startTime) / 1000); // seconds
    
    const hours = Math.floor(duration / 3600);
    const minutes = Math.floor((duration % 3600) / 60);
    const seconds = duration % 60;
    
    const display = hours > 0 
      ? `${hours}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`
      : `${minutes}:${seconds.toString().padStart(2, '0')}`;
    
    document.getElementById('ride-duration').textContent = display;
  }
  
  updateTimer();
  setInterval(updateTimer, 1000);

  // Reservation countdown timer
  const countdown = document.querySelector('[data-target-time]');
  if (!countdown) return;
  
  const targetTime = new Date(countdown.dataset.targetTime);
  let countdownInterval;
  
  function updateCountdown() {
    const now = new Date();
    const timeLeft = targetTime - now;
    
    if (timeLeft <= 0) {
      document.getElementById('reservation-countdown').textContent = 'J√° pode recolher!';
      if (countdownInterval) {
        clearInterval(countdownInterval);
      }
      return;
    }
    
    const hours = Math.floor(timeLeft / (1000 * 60 * 60));
    const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
    
    const display = hours > 0 
      ? `${hours}h ${minutes}m`
      : `${minutes}m`;
    
    document.getElementById('reservation-countdown').textContent = display;
  }
  
  updateCountdown();
  countdownInterval = setInterval(updateCountdown, 60000); // Update every minute
});

document.addEventListener('DOMContentLoaded', function() {
});
</script>